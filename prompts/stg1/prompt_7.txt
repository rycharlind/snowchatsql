Snowflake SQL tables, with their properties:
PAYMENTS_COST_VARIANCE_DISTRIBUTOR_DETAILS (ID (NUMBER(19,0)), _CREATED_ON (TIMESTAMP_LTZ(9)), _LAST_UPDATED_ON (TIMESTAMP_LTZ(9)), _REVISION (NUMBER(10,0)), _PARTNERUUID (VARCHAR(16777216)), TRANSACTION_TYPE (VARCHAR(16777216)), INVOICE_ID (VARCHAR(16777216)), INVOICE_DATE (TIMESTAMP_LTZ(9)), AGREEMENT_ID (VARCHAR(16777216)), RETURN_DATE (TIMESTAMP_LTZ(9)), RECEIVE_DATE (TIMESTAMP_LTZ(9)), INVOICE_DAY (VARCHAR(16777216)), QUANTITY (FLOAT), NET_RECEIPTS (FLOAT), NET_RECEIPTS_CURRENCY (VARCHAR(16777216)), LIST_PRICE (FLOAT), LIST_PRICE_CURRENCY (VARCHAR(16777216)), REBATE_IN_AGREEMENT_CURRENCY (FLOAT), AGREEMENT_CURRENCY (VARCHAR(16777216)), REBATE_IN_PURCHASE_ORDER_CURRENCY (FLOAT), PURCHASE_ORDER_CURRENCY (VARCHAR(16777216)), PURCHASE_ORDER (VARCHAR(16777216)), ASIN (VARCHAR(16777216)), UPC (VARCHAR(16777216)), EAN (VARCHAR(16777216)), MANUFACTURER (VARCHAR(16777216)), DISTRIBUTOR (VARCHAR(16777216)), PRODUCT_GROUP (FLOAT), CATEGORY (VARCHAR(16777216)), SUBCATEGORY (VARCHAR(16777216)), TITLE (VARCHAR(16777216)), PRODUCT_DESCRIPTION (VARCHAR(16777216)), BINDING (VARCHAR(16777216)), COST_CURRENCY (VARCHAR(16777216)), OLD_COST (VARCHAR(16777216)), NEW_COST (VARCHAR(16777216)), PRICE_PROTECTION_AGREEMENT (VARCHAR(16777216)), PRICE_PROTECTION_DAY (VARCHAR(16777216)), COST_VARIANCE (VARCHAR(16777216)), INVOICE (VARCHAR(16777216)), _ROW_INDEX (FLOAT))))
PAYMENTS_COUPON_CLIPS (ID (NUMBER(19,0)), _CREATED_ON (TIMESTAMP_LTZ(9)), _LAST_UPDATED_ON (TIMESTAMP_LTZ(9)), _REVISION (NUMBER(10,0)), _PARTNERUUID (VARCHAR(16777216)), INVOICE_ID (VARCHAR(16777216)), INVOICE_DATE (TIMESTAMP_LTZ(9)), AGREEMENT_ID (VARCHAR(16777216)), PROMOTION_ID (VARCHAR(16777216)), PROMOTION_DESCRIPTION (VARCHAR(16777216)), CLIP_DAY (TIMESTAMP_LTZ(9)), CLIPPED_COUPONS (FLOAT), CLIPPED_SOURCE (VARCHAR(16777216)), CLIP_FEE (FLOAT), TOTAL_CLIP_FEE (FLOAT))))
PAYMENTS_CUSTOMER_SHIPMENT_DETAILS (ID (NUMBER(19,0)), _CREATED_ON (TIMESTAMP_LTZ(9)), _LAST_UPDATED_ON (TIMESTAMP_LTZ(9)), _REVISION (NUMBER(10,0)), _PARTNERUUID (VARCHAR(16777216)), TRANSACTION_TYPE (VARCHAR(16777216)), INVOICE_ID (VARCHAR(16777216)), INVOICE_DATE (TIMESTAMP_LTZ(9)), AGREEMENT_ID (VARCHAR(16777216)), ORDER_DATE (TIMESTAMP_LTZ(9)), RETURN_DATE (TIMESTAMP_LTZ(9)), SHIP_DATE (TIMESTAMP_LTZ(9)), COST_DATE (TIMESTAMP_LTZ(9)), QUANTITY (FLOAT), NET_SALES (FLOAT), NET_SALES_CURRENCY (VARCHAR(16777216)), LIST_PRICE (FLOAT), LIST_PRICE_CURRENCY (VARCHAR(16777216)), REBATE_IN_AGREEMENT_CURRENCY (FLOAT), AGREEMENT_CURRENCY (VARCHAR(16777216)), PURCHASE_ORDER (VARCHAR(16777216)), ASIN (VARCHAR(16777216)), UPC (VARCHAR(16777216)), EAN (VARCHAR(16777216)), MANUFACTURER (VARCHAR(16777216)), DISTRIBUTOR (VARCHAR(16777216)), PRODUCT_GROUP (FLOAT), CATEGORY (VARCHAR(16777216)), SUBCATEGORY (VARCHAR(16777216)), TITLE (VARCHAR(16777216)), PRODUCT_DESCRIPTION (VARCHAR(16777216)), BINDING (VARCHAR(16777216)), PROMOTION_ID (VARCHAR(16777216)), COST_TYPE (VARCHAR(16777216)), ORDER_COUNTRY (VARCHAR(16777216)), _ROW_INDEX (FLOAT))))
PAYMENTS_DISTRIBUTOR_RETURNS_DETAILS (ID (NUMBER(19,0)), _CREATED_ON (TIMESTAMP_LTZ(9)), _LAST_UPDATED_ON (TIMESTAMP_LTZ(9)), _REVISION (NUMBER(10,0)), _PARTNERUUID (VARCHAR(16777216)), TRANSACTION_TYPE (VARCHAR(16777216)), INVOICE_ID (VARCHAR(16777216)), INVOICE_DATE (TIMESTAMP_LTZ(9)), AGREEMENT_ID (VARCHAR(16777216)), RETURN_DATE (TIMESTAMP_LTZ(9)), RECEIVE_DATE (TIMESTAMP_LTZ(9)), INVOICE_DAY (VARCHAR(16777216)), QUANTITY (FLOAT), NET_RECEIPTS (FLOAT), NET_RECEIPTS_CURRENCY (VARCHAR(16777216)), LIST_PRICE (FLOAT), LIST_PRICE_CURRENCY (VARCHAR(16777216)), REBATE_IN_AGREEMENT_CURRENCY (FLOAT), AGREEMENT_CURRENCY (VARCHAR(16777216)), REBATE_IN_PURCHASE_ORDER_CURRENCY (FLOAT), PURCHASE_ORDER_CURRENCY (VARCHAR(16777216)), PURCHASE_ORDER (VARCHAR(16777216)), ASIN (VARCHAR(16777216)), UPC (VARCHAR(16777216)), EAN (VARCHAR(16777216)), MANUFACTURER (VARCHAR(16777216)), DISTRIBUTOR (VARCHAR(16777216)), PRODUCT_GROUP (FLOAT), CATEGORY (VARCHAR(16777216)), SUBCATEGORY (VARCHAR(16777216)), TITLE (VARCHAR(16777216)), PRODUCT_DESCRIPTION (VARCHAR(16777216)), BINDING (VARCHAR(16777216)), COST_CURRENCY (VARCHAR(16777216)), OLD_COST (VARCHAR(16777216)), NEW_COST (VARCHAR(16777216)), PRICE_PROTECTION_AGREEMENT (VARCHAR(16777216)), PRICE_PROTECTION_DAY (VARCHAR(16777216)), COST_VARIANCE (VARCHAR(16777216)), INVOICE (VARCHAR(16777216)), _ROW_INDEX (FLOAT))))
PAYMENTS_DISTRIBUTOR_SHIPMENT_DETAILS (ID (NUMBER(19,0)), _CREATED_ON (TIMESTAMP_LTZ(9)), _LAST_UPDATED_ON (TIMESTAMP_LTZ(9)), _REVISION (NUMBER(10,0)), _PARTNERUUID (VARCHAR(16777216)), TRANSACTION_TYPE (VARCHAR(16777216)), INVOICE_ID (VARCHAR(16777216)), INVOICE_DATE (TIMESTAMP_LTZ(9)), AGREEMENT_ID (VARCHAR(16777216)), RETURN_DATE (TIMESTAMP_LTZ(9)), RECEIVE_DATE (TIMESTAMP_LTZ(9)), INVOICE_DAY (VARCHAR(16777216)), QUANTITY (FLOAT), NET_RECEIPTS (FLOAT), NET_RECEIPTS_CURRENCY (VARCHAR(16777216)), LIST_PRICE (FLOAT), LIST_PRICE_CURRENCY (VARCHAR(16777216)), REBATE_IN_AGREEMENT_CURRENCY (FLOAT), AGREEMENT_CURRENCY (VARCHAR(16777216)), REBATE_IN_PURCHASE_ORDER_CURRENCY (FLOAT), PURCHASE_ORDER_CURRENCY (VARCHAR(16777216)), PURCHASE_ORDER (VARCHAR(16777216)), ASIN (VARCHAR(16777216)), UPC (VARCHAR(16777216)), EAN (VARCHAR(16777216)), MANUFACTURER (VARCHAR(16777216)), DISTRIBUTOR (VARCHAR(16777216)), PRODUCT_GROUP (FLOAT), CATEGORY (VARCHAR(16777216)), SUBCATEGORY (VARCHAR(16777216)), TITLE (VARCHAR(16777216)), PRODUCT_DESCRIPTION (VARCHAR(16777216)), BINDING (VARCHAR(16777216)), COST_CURRENCY (VARCHAR(16777216)), OLD_COST (VARCHAR(16777216)), NEW_COST (VARCHAR(16777216)), PRICE_PROTECTION_AGREEMENT (VARCHAR(16777216)), PRICE_PROTECTION_DAY (VARCHAR(16777216)), COST_VARIANCE (VARCHAR(16777216)), INVOICE (VARCHAR(16777216)), _ROW_INDEX (FLOAT))))
You are a business owner who sells products on Amazon.com that needs to understand the data in Snowflake.
Generate 5 questions that you would ask about the above Snowflake tables in aggregate.
Do not number your questions. Separate them with a blank line.
Do not reference exact table names or fields names in your response.
You are asking a business analyst questions who will query Snowflake to get results.
Your response should be able to be converted into a Snowflake SQL query if provided back to you.